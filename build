#!/bin/sh

BINARY="server client"

# If GMP is detected build it in by default, otherwise don't
if [ -e "/usr/include/gmp.h" ]; then
	GMP_INC="/usr/include"
	GMP_LIB="/usr/lib"
elif [ -e "/usr/local/include/gmp/gmp.h" ]; then
	GMP_INC="/usr/local/include/gmp"
	GMP_LIB="/usr/local/lib"
else
	GMP_INC=""
	GMP_LIB=""
fi

# If the binary is already there, delete it
if [ -e "$BINARY" ]; then
	rm -rf $BINARY
fi

# If we are compiling with GMP support, let the user know
if [ -n "$GMP_LIB" ]; then
	echo "Building Zorpher with GMP support."
fi

# For each binary to create, do it...
for i in $BINARY
do
	# Only compile if file is found (take this if block out once client code is being done)...
	if [ -e "$i.cpp" ]; then
		# Not really needed, but nice anyways
		echo "Compiling $i"

		# If GMP support was found, compile it in, otherwise don't
		if [ -n "GMP_LIB" ]; then
			g++ -Wcpp -Wall -I"$GMP_INC" -L"$GMP_LIB" -o $i -lgmp -lgmpxx $i.cpp
		else
			g++ -Wcpp -Wall -o $i $i.cpp
		fi
	fi
done

# Run the binary
#if [ -e "$BINARY" ]; then
#	./$BINARY
#fi
